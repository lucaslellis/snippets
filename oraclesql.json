{
	// Place your snippets for oraclesql here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    "New SQL*Plus script - boilerplate": {
        "prefix": "boilerplate",
        "body": [
            "conn ${1:user}/${2:password}@${3:database}",
            "",
            "select sid, serial#",
            "from v\\$session",
            "where sid=SYS_CONTEXT('USERENV','SID');",
            "",
            "store set sqlenv replace",
            "set trimspool on feed on autocommit off time on sqlbl on tab off verify off",
            "set linesize 1000 arraysize 500 pages 9999 longchunksize 10240000",
            "set serveroutput on exitcommit off",
            "",
            "set sqlprompt \"_USER'@'_CONNECT_IDENTIFIER _PRIVILEGE> \"",
            "",
            "set echo on timing on",
            "",
            "alter session set workarea_size_policy=manual;",
            "alter session set hash_area_size=536870912;",
            "alter session set sort_area_size=536870912;",
            "",
            "alter session set ddl_lock_timeout=30;",
            "",
            "alter session set parallel_force_local=true;",
            "",
            "alter session enable parallel query;",
            "alter session force parallel query parallel ${4:parallel_degree};",
            "",
            "alter session enable parallel dml;",
            "alter session force parallel dml parallel ${4:parallel_degree};",
            "",
            "alter session enable parallel ddl;",
            "alter session force parallel ddl parallel ${4:parallel_degree};",
            "",
            "${TM_SELECTED_TEXT}$0",
            "",
            "spool off",
            "@sqlenv",
            "exit",
            ""
        ],
        "description": "Boilerplate code for new SQL*Plus scripts"
    },
    "New SQL*Plus script - boilerplate for dbms_xplan": {
        "prefix": "boilerplate - dbms_xplan",
        "body": [
            "conn ${1:user}/${2:password}@${3:database}",
            "",
            "select sid, serial#",
            "from v\\$session",
            "where sid=SYS_CONTEXT('USERENV','SID');",
            "",
            "store set sqlenv replace",
            "set trimspool on feed off autocommit off time on sqlbl on tab off verify off",
            "set linesize 1000 arraysize 500 pages 9999 longchunksize 10240000",
            "set serveroutput off exitcommit off",
            "",
            "set sqlprompt \"_USER'@'_CONNECT_IDENTIFIER _PRIVILEGE> \"",
            "",
            "set echo off timing on",
            "",
            "alter session set workarea_size_policy=manual;",
            "alter session set hash_area_size=536870912;",
            "alter session set sort_area_size=536870912;",
            "",
            "alter session set ddl_lock_timeout=30;",
            "",
            "alter session set parallel_force_local=true;",
            "",
            "alter session enable parallel query;",
            "alter session force parallel query parallel ${4:parallel_degree};",
            "",
            "alter session enable parallel dml;",
            "alter session force parallel dml parallel ${4:parallel_degree};",
            "",
            "alter session enable parallel ddl;",
            "alter session force parallel ddl parallel ${4:parallel_degree};",
            "",
            "alter session set statistics_level='ALL';",
            "",
            "set term off",
            "",
            "spool /dev/null",
            "",
            "${TM_SELECTED_TEXT}$0",
            "",
            "spool off",
            "",
            "set term on",
            "",
            "select * from table(dbms_xplan.display_cursor(null, null, 'ADVANCED LAST ALLSTATS -PROJECTION -ALIAS -OUTLINE'));",
            "",
            "@sqlenv",
            "exit",
            ""
        ],
        "description": "Boilerplate code for new SQL*Plus script for query plan output"
    },
    "Gather Schema Stats": {
        "prefix": "schema stats",
        "body": [
            "begin",
            "    dbms_stats.gather_schema_stats(",
            "        ownname          => '${1:${TM_SELECTED_TEXT/(.*)/${1:/upcase}/}}',",
            "        estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE,",
            "        method_opt       => 'FOR ALL COLUMNS SIZE AUTO',",
            "        degree           => ${2:PARALLEL_DEGREE},",
            "        options          => 'GATHER EMPTY',",
            "        no_invalidate    => false",
            "    );",
            "",
            "    dbms_stats.gather_schema_stats(",
            "        ownname          => '${1:${TM_SELECTED_TEXT/(.*)/${1:/upcase}/}}',",
            "        estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE,",
            "        method_opt       => 'FOR ALL COLUMNS SIZE AUTO',",
            "        degree           => ${2:PARALLEL_DEGREE},",
            "        options          => 'GATHER STALE',",
            "        no_invalidate    => false",
            "    );",
            "end;",
            "/",
            "",
            "$0"
        ],
        "description": "Gather Statistics for an Oracle Schema"
    },
    "Gather Table Stats": {
        "prefix": "table stats",
        "body": [
            "begin",
            "    dbms_stats.gather_table_stats(",
            "        ownname          => '${1:OWNER}',",
            "        tabname          => '${2:TABLE_NAME}',",
            "        estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE,",
            "        method_opt       => 'FOR ALL COLUMNS SIZE AUTO',",
            "        degree           => ${3:PARALLEL_DEGREE},",
            "        no_invalidate    => false",
            "    );",
            "end;",
            "/",
            "",
            "$0"
        ],
        "description": "Gather Statistics for an Oracle Table"
    },
    "Gather Table Partition Stats": {
        "prefix": "table partition stats",
        "body": [
            "begin",
            "    dbms_stats.gather_table_stats(",
            "        ownname          => '${1:OWNER}',",
            "        tabname          => '${2:TABLE_NAME}',",
            "        partname         => '${3:PARTITION_NAME}',",
            "        granularity      => 'PARTITION',",
            "        estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE,",
            "        method_opt       => 'FOR ALL COLUMNS SIZE AUTO',",
            "        degree           => ${3:PARALLEL_DEGREE},",
            "        no_invalidate    => false",
            "    );",
            "end;",
            "/",
            "",
            "$0"
        ],
        "description": "Gather Statistics for an Oracle Table Partition"
    },
    "Gather Table Subpartition Stats": {
        "prefix": "table subpartition stats",
        "body": [
            "begin",
            "    dbms_stats.gather_table_stats(",
            "        ownname          => '${1:OWNER}',",
            "        tabname          => '${2:TABLE_NAME}',",
            "        partname         => '${3:PARTITION_NAME}',",
            "        granularity      => 'SUBPARTITION',",
            "        estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE,",
            "        method_opt       => 'FOR ALL COLUMNS SIZE AUTO',",
            "        degree           => ${3:PARALLEL_DEGREE},",
            "        no_invalidate    => false",
            "    );",
            "end;",
            "/",
            "",
            "$0"
        ],
        "description": "Gather Statistics for an Oracle Table Subpartition"
    },
    "Gather Dictionary Stats": {
        "prefix": "dictionary stats",
        "body": [
            "begin",
            "    dbms_stats.gather_dictionary_stats(",
            "        degree        => ${1:PARALLEL_DEGREE},",
            "        no_invalidate => false",
            "    );",
            "end;",
            "/",
            "",
            "$0"
        ],
        "description": "Gather Statistics for Oracle's Dictionary"
    },
    "Gather Fixed Objects Stats": {
        "prefix": "fixed objects stats",
        "body": [
            "begin",
            "    dbms_stats.gather_fixed_objects_stats(",
            "        no_invalidate => false",
            "    );",
            "end;",
            "/",
            "",
            "$0"
        ],
        "description": "Gather Statistics for Oracle's Fixed Tables"
    }
}